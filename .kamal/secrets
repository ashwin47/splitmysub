# Secrets defined here are available for reference under registry/password, env/secret, builder/secrets,
# and accessories/*/env/secret in config/deploy.yml. All secrets should be pulled from either
# password manager, ENV, or a file. DO NOT ENTER RAW CREDENTIALS HERE! This file needs to be safe for git.

# Example of extracting secrets from 1password (or another compatible pw manager)
# SECRETS=$(kamal secrets fetch --adapter 1password --account your-account --from Vault/Item KAMAL_REGISTRY_PASSWORD RAILS_MASTER_KEY)
# KAMAL_REGISTRY_PASSWORD=$(kamal secrets extract KAMAL_REGISTRY_PASSWORD ${SECRETS})
# RAILS_MASTER_KEY=$(kamal secrets extract RAILS_MASTER_KEY ${SECRETS})

# Use a GITHUB_TOKEN if private repositories are needed for the image
# GITHUB_TOKEN=$(gh config get -h github.com oauth_token)

# Registry credentials for container access
KAMAL_REGISTRY_PASSWORD=$KAMAL_REGISTRY_PASSWORD
KAMAL_REGISTRY_USERNAME=$KAMAL_REGISTRY_USERNAME

# Improve security by using a password manager. Never check config/master.key into git!
RAILS_MASTER_KEY=$(cat config/master.key)

# SMTP credentials - Read from .env file or ENV variables
# For Gmail: Use your Gmail address and App Password (not regular password)
# For other SMTP providers: Use the provided credentials
SMTP_USERNAME=$(grep '^SMTP_USERNAME=' .env 2>/dev/null | cut -d'=' -f2)
SMTP_PASSWORD=$(grep '^SMTP_PASSWORD=' .env 2>/dev/null | cut -d'=' -f2)
RESEND_API_KEY=$(grep '^RESEND_API_KEY=' .env 2>/dev/null | cut -d'=' -f2)
ADMIN_PASSWORD=$(grep '^ADMIN_PASSWORD=' .env 2>/dev/null | cut -d'=' -f2)
